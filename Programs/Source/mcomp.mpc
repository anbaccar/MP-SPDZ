program.use_dabit = bool(int(program.args[1]))
program.use_edabit(int(program.args[1]) == 2)

print(program.use_dabit, program.use_edabit())

program.set_security(40)
program.set_bit_length(31)

n = 2**20

res = sint.Array(n)

n_threads = 1 

l = 1

try:
    n_threads = int(program.args[2])
except:
    pass

try:
    n = int(program.args[3])
except:
    pass

try:
    l = int(program.args[4])
except:
    pass

print('%d comparison in %d threads and %d rounds' % (n, n_threads, l))

# @for_range(1000000)
@multithread(n_threads, n)
def _(base, m):
    @for_range(l)
    def _(i):
        (sint(0, size=m) < sint(1, size=m)).store_in_mem(base)
